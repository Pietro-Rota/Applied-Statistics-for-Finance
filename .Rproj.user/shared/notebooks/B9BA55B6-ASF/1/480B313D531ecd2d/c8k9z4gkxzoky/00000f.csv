"0","#CIR parameter estimation with QMLE"
"0",""
"0","ret <- setYuima(data=setData(adj_close))"
"0","CIR <- setModel(drift=""theta1-theta2*x"", diffusion=matrix(""theta3*x^(1/2)"",1,1),solve.variable=""x"")"
"0","startCIR <- list(theta1=1, theta2 =.1, theta3 =.3)"
"0","lowerCIR <- list(theta1=1e-6, theta2 =1e-6, theta3 =1e-6)"
"0","upperCIR <- list(theta1=10, theta2 =10, theta3 =10)"
"0",""
"0","yuima <- setYuima(data=ret@data, model=CIR)"
"0","outCIR <- qmle(yuima,  start=startCIR, lower=lowerCIR, upper=upperCIR, method=""L-BFGS-B"")"
"0","coef(outCIR)"
"1","     theta3 "
"1","     theta1 "
"1","     theta2 "
"1","
"
"1","1.451089760 "
"1","1.695440174 "
"1","0.006527073 "
"1","
"
"0","resultCIR <- outCIR@coef"
"0","CIRParam <- t(outCIR@coef)"
"0",""
"0","theta1 <- as.numeric(CIRParam[1])"
"0","theta2 <- as.numeric(CIRParam[2])"
"0","theta3 <- as.numeric(CIRParam[3])"
"0",""
"0","###### CIR - Simulation ######"
"0","CIR_paths <- matrix(nrow = nsim, ncol = N+1)"
"0","samp <- setSampling (n=N, Terminal=Time)"
"0",""
"0","for (i in 1:nsim) {"
"0","  MSFTsimulationCIR <-simulate(CIR, xinit=adj_close[427,1] , sampling=samp, true.par = list(theta1=CIRParam[2], theta2=CIRParam[3], theta3=CIRParam[1]))"
"0","  CIR_paths[i,] <-  MSFTsimulationCIR@data@original.data"
"0","}"
"0",""
"0","colori=viridis(nsim)"
"0","plot(CIR_paths[1,], col=0, type=""l"", ylim = c(min(CIR_paths),max(CIR_paths)), "
"0","     main = ""Monte Carlo Simulation for CIR returns"", sub = ""10 steps, 10 paths"", "
"0","     xlab = ""Time"", ylab = ""CIR returns"")"
