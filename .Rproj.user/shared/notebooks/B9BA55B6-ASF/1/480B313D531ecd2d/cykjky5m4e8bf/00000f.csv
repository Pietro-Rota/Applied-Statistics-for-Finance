"0","##  because the true model is not gBm"
"0","ymodel <- setModel(drift =""mu*x"", diffusion = ""sigma*x"")"
"0",""
"0","yuima <- setYuima(model = ymodel, "
"0","                  data = setData(S), "
"0","                  sampling = setSampling(delta = Delta, n = length(S)))"
"0",""
"0","qmle <- qmle(yuima, "
"0","             start = list(mu = 0.5, sigma = 0.2), "
"0","             lower = list(mu = 0.05, sigma = 0.05), "
"0","             upper = list(mu = 0.7, sigma = 0.5), "
"0","             method = ""L-BFGS-B"")"
"0",""
"0","summary(qmle)"
"1","Quasi-Maximum likelihood estimation

Call:
"
"1","qmle(yuima = yuima, start = list(mu = 0.5, sigma = 0.2), method = ""L-BFGS-B"", 
"
"1","    lower = list(mu = 0.05, sigma = 0.05), upper = list(mu = 0.7, 
"
"1","        sigma = 0.5))
"
"1","
Coefficients:
"
"1","     "
"1","   Estimate"
"1","  Std. Error"
"1","
sigma"
"1"," 0.49909925"
"1","         NaN"
"1","
mu   "
"1"," 0.05006953"
"1"," 0.009082041"
"1","
"
"1","
-2 log L:"
"1"," "
"1","22169.14"
"1"," "
"1","
"
"0","logLik(qmle)"
"1","'log Lik.' "
"1",""
"1","-11084.57"
"1",""
"1"," (df="
"1",""
"1","2"
"1",""
"1",")
"
"0","# log.lik(coef(qmle)[1], sigma = coef(qmle)[2])"
"0",""
"0","check_acc(data1 = sort(as.numeric(LR_S)), "
"0","          data2 = sort(rnorm(length(LR_S), mean = coef(qmle)[1], coef(qmle)[2])), "
"0","          title = ""Sorted values to confront distributional assumptions"")"
"2","[38;5;237mScale for [32my[38;5;237m is already present.
Adding another scale for [32my[38;5;237m, which will replace the existing scale.[39m"
