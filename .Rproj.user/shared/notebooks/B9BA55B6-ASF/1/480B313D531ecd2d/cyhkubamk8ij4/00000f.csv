"0","MCPrice <- function(x = 1, Time = 0, T_mat= 1, r = 1, sigma = 1, M = 1000, f) {"
"0","     h <- function(m) {"
"0","         u <- rnorm(m/2)"
"0","         tmp <- c(x * exp((r - 0.5 * sigma^2) * (T_mat - Time) + sigma * sqrt(T_mat - Time) * u),"
"0","                  x * exp((r - 0.5 * sigma^2) * (T_mat - Time) + sigma * sqrt(T_mat - Time) * (-u)))"
"0","         "
"0","         mean(sapply(tmp, function(xx) f(xx)))"
"0","     }"
"0","     p <- h(M)"
"0","     p * exp(-r * (T_mat - Time))"
"0","}"
"0","# Example"
"0","f <- function(x) max(0, x - K)"
"0",""
"0",""
"0","M <- 1000"
"0","MC1 <- MCPrice(x = S0, Time = 0, T_mat = Time, r = r, sigma, M = M, f = f)"
"0","cat(""Call price according to Monte Carlo"", MC1, ""after"", M, ""simulations, and with a diffference of"", MC1-C, ""\n"")"
"1","Call price according to Monte Carlo"
"1"," "
"1","1.948677"
"1"," "
"1","after"
"1"," "
"1","1000"
"1"," "
"1","simulations, and with a diffference of"
"1"," "
"1","-0.0318296"
"1"," "
"1","
"
"0","M <- 50000"
"0","MC2 <- MCPrice(x = S0, Time = 0, T_mat = Time, r = r, sigma, M = M, f = f)"
"0","cat(""Call price according to Monte Carlo"", MC2, ""after"", M, ""simulations, and with a diffference of"", MC2-C, ""\n"")"
"1","Call price according to Monte Carlo"
"1"," "
"1","1.991614"
"1"," "
"1","after"
"1"," "
"1","50000"
"1"," "
"1","simulations, and with a diffference of"
"1"," "
"1","0.01110754"
"1"," "
"1","
"
"0","M <- 1e+06"
"0","MC3 <- MCPrice(x = S0, Time = 0, T_mat = Time, r = r, sigma, M = M, f = f)"
"0","cat(""Call price according to Monte Carlo"", MC3, ""after"", M, ""simulations, and with a diffference of"", MC3-C, ""\n"")"
"1","Call price according to Monte Carlo"
"1"," "
"1","1.980904"
"1"," "
"1","after"
"1"," "
"1","1e+06"
"1"," "
"1","simulations, and with a diffference of"
"1"," "
"1","0.0003973576"
"1"," "
"1","
"
"0","# Speed of convergence"
"0","m <- c(10, 50, 100, 150, 200, 250, 500, 1000)"
"0","p1 <- NULL"
"0","err <- NULL"
"0","nM <- length(m)"
"0","repl <- 100"
"0","mat <- matrix(, repl, nM)"
"0","for (k in 1:nM) {"
"0","  tmp <- numeric(repl)"
"0","  for (i in 1:repl) {"
"0","    tmp[i] <- MCPrice(x = S0, Time = 0, T_mat = Time, r = r, sigma, M = m[k], f = f)"
"0","  }"
"0","  mat[, k] <- tmp"
"0","  p1 <- c(p1, mean(tmp))"
"0","  err <- c(err, sd(tmp))"
"0","}"
"0","colnames(mat) <- m"
"0","mat %>% round(5) %>%  datatable()"
