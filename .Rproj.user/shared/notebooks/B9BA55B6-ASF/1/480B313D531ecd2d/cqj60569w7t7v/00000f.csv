"0","# another function with  "
"0","GBM.vec_inv <- function(N = 100, x = 10, r = 1, sigma = 0.5, Time = 1) {"
"0","  # r = 1"
"0","  # sigma = 0.5"
"0","  # x = 10"
"0","  # N = 100                  # number of grid points including maturity Time"
"0","  # Time = 1                 # length of the interval [0, Time] in time units"
"0",""
"0","  Delta <- Time / (N + 1)            # time increment (dt)"
"0","  W <- numeric(N)          # initialization of the vector W"
"0",""
"0","  Time <- seq(0, Time, length = N)"
"0","  for (i in 2:N)"
"0","    W[i] <- W[i - 1] + rnorm(1) * sqrt(Delta)"
"0",""
"0","  S <- x * exp((r - sigma^2 / 2) * Time - sigma * W)"
"0","  return(S)"
"0","}"
"0",""
"0","N <- 100                # number of grid points including maturity Time"
"0","M <- 1000               # number of simulations (min 3)"
"0","x <- 10"
"0","r <- 1"
"0","sigma <- 0.5"
"0","Time <- 1"
"0",""
"0","norm <- replicate(M,     GBM.vec(N = N, x = x, r = r, sigma = sigma, Time = Time))"
"0","inv  <- replicate(M, GBM.vec_inv(N = N, x = x, r = r, sigma = sigma, Time = Time))"
"0",""
"0","long_norm <- melt(norm[,seq(from = 1, to = min(50,M), by =2)]) %>% "
"0","  mutate(Var1 = Var1/N)"
"0","long_inv  <- melt( inv[,seq(from = 1, to = min(50,M), by =2)]) %>% "
"0","    mutate(Var1 = Var1/N)"
"0",""
"0","ggplot() +"
"0","  geom_line(data = long_norm, aes(x = Var1, y = value, group = Var2, colour = ""Normal""), linewidth = 1) +"
"0","  geom_line(data = long_inv,  aes(x = Var1, y = value, group = Var2, colour = ""Inverted""), linewidth = 1) +"
"0","  scale_color_manual(values = c(Normal = ""darkblue"", Inverted = ""darkred"")) +"
"0","  labs(title = ifelse(M > 50, paste(""50 simulations out of"", M, ""total""), paste(M, ""simulations"")),"
"0","    subtitle = ""Color coded split half normal half inverted"", x = ""time"", y = ""Value of GBM"")"
