"0","##Meixner parameter estimation with Method of Moment"
"0","x <-mean(l_ret, na.rm = TRUE)"
"0","y <-sd(l_ret, na.rm = TRUE)"
"0","z <-as.numeric(skewness(l_ret, na.rm = TRUE))"
"0","w <-as.numeric(kurtosis(l_ret, na.rm = TRUE))"
"0",""
"0","m <- x-((z*sqrt(y))/(w-(z^2)-3)) "
"0","a <- sqrt(y*(2*w-3*(z^2)-6)) "
"0","b <- 2*atan(-sqrt((z^2)/(2*w-3*(z^2)-6))) "
"0","d <- 1/(w-(z^2)-3)"
"0",""
"0","###### Meixner - Simulation ######"
"0","#Meixner Process"
"0","m <- 0.012"
"0","a <- 0.53"
"0","b <- -0.25"
"0","d <- 0.16"
"0","#Simulation of 1 path"
"0","nsim <- 10"
"0","N <- 100"
"0",""
"0","MXexp_paths<-matrix(NA, nrow = nsim, ncol=N) #alternative code"
"0","h=Time/N "
"0","Time=(0:N)*Time/N"
"0","X=rep(0,N+1) "
"0","X[1]=0"
"0",""
"0","for(i in 1:nsim){"
"0","  distr <- udmeixner(a, b, d, m) #meiner distribution"
"0","  gen <- pinvd.new(distr) #Polynomial interpolation of INVerse CDF"
"0","  rdmMXgen <- ur(gen,N) #randomly draws N objects from gen (from a Meixner distr)"
"0","  for (j in 1:N) {"
"0","    X[i+j]=X[j]+rdmMXgen[j]"
"0","    MXexp_paths[i,j]<-X[j+1]"
"0","  }"
"0","}"
"0",""
"0","MXexp_paths<-cbind((matrix(0, nrow=nsim, ncol=1)),MXexp_paths)"
"0","colori=viridis(20)"
"0","plot(MXexp_paths[1,], col=0, type=""l"", ylim = c(min(MXexp_paths[1,]),max(MXexp_paths[1,])), #plot the Monte Carlo Simulation"
"0","     main = ""MC Simlation for Meixner"", sub = ""100 steps, 1 paths"", "
"0","     xlab = ""Time"", ylab = ""Meixner Process"")"
