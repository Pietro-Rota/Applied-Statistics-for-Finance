"0","#CKLS parameter estimation with MLE"
"0",""
"0","ret <- setYuima(data=setData(adj_close))"
"0","ckls <- setModel(drift=""theta1-theta2*x"", diffusion=matrix(""theta3*x^theta4"",1,1),solve.variable=""x"")"
"0","startCkls <- list(theta1=.1, theta2 =.1, theta3 =.3, theta4=0.5)"
"0","lowerCkls <- list(theta1=1e-3, theta2 =1e-6, theta3 =1e-3, theta4=1e-3)"
"0","upperCkls <- list(theta1=3, theta2 =3, theta3 =3, theta4=2)"
"0",""
"0","yuima <- setYuima(data=ret@data, model=ckls)"
"0","outCkls <- qmle(yuima,  start=startCkls, lower=lowerCkls, upper=upperCkls, method=""L-BFGS-B"")"
"0",""
"0","coef(outCkls)"
"1","     theta3 "
"1","     theta4 "
"1","     theta1 "
"1","     theta2 "
"1","
"
"1","0.318282190 "
"1","0.790269586 "
"1","2.005931613 "
"1","0.008006809 "
"1","
"
"0","resultCkls <-  outCkls@coef"
"0","CKLSParam <- t(outCkls@coef)"
"0",""
"0","theta1 <- as.numeric(CKLSParam[1])"
"0","theta2 <- as.numeric(CKLSParam[2])"
"0","theta3 <- as.numeric(CKLSParam[3])"
"0","theta4 <- as.numeric(CKLSParam[4])"
"0",""
"0","###### CKLS - Simulation ######"
"0","CKLS_paths <- matrix(nrow = nsim, ncol = N+1)"
"0","samp <- setSampling (n=N, Terminal=Time)"
"0",""
"0","for (i in 1:nsim) {"
"0","  MSFTsimulationCKLS <- simulate(ckls, xinit=S0 , sampling=samp, true.par = list(theta1=CKLSParam[3], theta2=CKLSParam[4], theta3=CKLSParam[1], theta4=CKLSParam[2]))"
"0","  CKLS_paths[i,] <-  MSFTsimulationCKLS@data@original.data"
"0","}"
"0",""
"0","colori=viridis(nsim)"
"0","plot(CKLS_paths[1,], col=0, type=""l"", ylim = c(min(CKLS_paths),max(CKLS_paths)), "
"0","     main = ""Monte Carlo Simulation for CKLS returns"", sub = ""10 steps, 10 paths"", "
"0","     xlab = ""Time"", ylab = ""CKLS returns"")"
