"0","# using the mle function"
"0","xnorm <- rnorm(1000, mean = 6, sd = 2)"
"0",""
"0",""
"0","log.lik <- function(mu = 2, sigma = 2) { # Choose good starting values"
"0","  -sum(dnorm(xnorm, mean = mu, sd = sigma, log = TRUE))"
"0","} "
"0",""
"0","fit <- mle(log.lik, lower = c(0, 0) , upper = c(Inf, Inf),  method = ""L-BFGS-B"")"
"0","summary(fit)"
"1","Maximum likelihood estimation

Call:
"
"1","mle(minuslogl = log.lik, method = ""L-BFGS-B"", lower = c(0, 0), 
"
"1","    upper = c(Inf, Inf))
"
"1","
Coefficients:
"
"1","     "
"1"," Estimate"
"1"," Std. Error"
"1","
mu   "
"1"," 5.980428"
"1"," 0.06360089"
"1","
sigma"
"1"," 2.011237"
"1"," 0.04497286"
"1","
"
"1","
-2 log L:"
"1"," "
"1","4235.368"
"1"," "
"1","
"
"0","logLik(fit)"
"1","'log Lik.' "
"1",""
"1","-2117.684"
"1",""
"1"," (df="
"1",""
"1","2"
"1",""
"1",")
"
"0","# log.lik(coef(fit)[1], sigma = coef(fit)[2])"
"0",""
"0","confint(fit)"
"1","Profiling...
"
"1","     "
"1","    2.5 %"
"1","   97.5 %"
"1","
mu   "
"1"," 5.855657"
"1"," 6.105207"
"1","
sigma"
"1"," 1.926206"
"1"," 2.102703"
"1","
"
"0","check_acc(data1 = sort(xnorm), "
"0","          data2 = sort(rnorm(1000, mean = coef(fit)[1], coef(fit)[2])),"
"0","          title = ""Sorted values to confront distributional assumptions"")"
"2","[38;5;237mScale for [32my[38;5;237m is already present.
Adding another scale for [32my[38;5;237m, which will replace the existing scale.[39m"
