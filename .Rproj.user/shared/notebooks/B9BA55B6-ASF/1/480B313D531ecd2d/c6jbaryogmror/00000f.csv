"0","#######Pricing with FFT under the VG process"
"0","# VG process"
"0","theta <- -0.1436"
"0","nu <- 0.3"
"0","r <- 0.1"
"0","sigma <- 0.12136"
"0","Time <- 1/4"
"0","K <- 101"
"0","S <- 100"
"0","alpha <- 1.65"
"0","phiVG <- function(u) {"
"0","     omega <- (1/nu) * (log(1 - theta * nu - sigma^2 * nu/2))"
"0","     tmp <- 1 - (0+1i) * theta * nu * u + 0.5 * sigma^2 * u^2 * nu"
"0","	 tmp <- tmp^(-1/nu)"
"0","     exp((0+1i) * u * log(S0) + u * (r + omega) * (0+1i)) * tmp"
"0","}"
"0",""
"0","FFTcall.price <- function(phi, S0, K, r, Time, alpha = 1, N = 2^12, eta = 0.25) {"
"0","	m <- r - log(phi(-(0+1i)))"
"0","	phi.tilde <- function(u) (phi(u) * exp((0+1i) * u * m))^Time"
"0","	psi <- function(v) exp(-r * Time) * phi.tilde((v - (alpha +"
"0","													 1) * (0+1i)))/(alpha^2 + alpha - v^2 + (0+1i) * (2 *"
"0","																									  alpha + 1) * v)"
"0","	lambda <- (2 * pi)/(N * eta)"
"0","	b <- 1/2 * N * lambda"
"0","	ku <- -b + lambda * (0:(N - 1))"
"0","	v <- eta * (0:(N - 1))"
"0","	tmp <- exp((0+1i) * b * v) * psi(v) * eta * (3 + (-1)^(1:N) -"
"0","												 ((1:N) - 1 == 0))/3"
"0","	ft <- fft(tmp)"
"0","	res <- exp(-alpha * ku) * ft/pi"
"0","	inter <- spline(ku, Re(res), xout = log(K/S0))"
"0","	return(inter$y * S0)"
"0","}"
"0","FFTcall.price(phiVG, S0 = S0, K = K, r = r, Time = Time)"
"1","[1]"
"1"," 85.44944"
"1","
"
