"0","start <- as.Date(""2020-01-24"") #start <- cpoint(S)$tau "
"0","end <- as.Date(""2021-10-04"")"
"0",""
"0","MSFT <- getSymbols(""MSFT"", from = start, to = end, auto.assign = FALSE)"
"0","attr(MSFT, ""src"")"
"1","[1]"
"1"," ""yahoo"""
"1","
"
"0","adj_close <- MSFT$MSFT.Adjusted"
"0","l_ret <- diff(log(adj_close))"
"0","l_ret <- na.omit(l_ret)"
"0",""
"0","##Merton parameter estimation with Method of Moment"
"0","x <-mean(l_ret, na.rm = TRUE)"
"0","y <-sd(l_ret, na.rm = TRUE)"
"0","z <-as.numeric(skewness(l_ret, na.rm = TRUE))"
"0","w <-as.numeric(kurtosis(l_ret, na.rm = TRUE))"
"0",""
"0","#Mom: estimates parameters m, a, b, d as functions of the moments"
"0","m <- x-((z*sqrt(y))/(w-(z^2)-3)) "
"0","a <- sqrt(y*(2*w-3*(z^2)-6)) "
"0","b <- 2*atan(-sqrt((z^2)/(2*w-3*(z^2)-6))) "
"0","d <- 1/(w-(z^2)-3) "
"0",""
"0","###### Meixner - Test Fitting ######"
"0","##QQplot"
"0","l_ret.s <- sort(as.numeric(l_ret))  #sort the log returns"
"0","p <- ppoints(length(l_ret.s)) #plotting position"
"0","MX.q <- uq(pinvd.new(udmeixner(a, b, d, m)), p) #compute the quantile"
"0",""
"0","plot(MX.q, l_ret.s, main = ""MSFT Meixner QQ Plot"","
"0","     xlab = ""Theoretical Quantiles"", ylab = ""Sample Quantiles"")"
