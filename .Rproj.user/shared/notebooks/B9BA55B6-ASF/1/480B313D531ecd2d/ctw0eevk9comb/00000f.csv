"0","Delta<-1/252 "
"0",""
"0","ret <- setYuima(data=setData(adj_close))"
"0","dat <- as.vector(coredata(ret@data@original.data))"
"0","a.hat <- var(diff(log(dat)))/Delta"
"0","a.hat <- var(diff(log(dat)))/Delta"
"0","b.hat <- mean(diff(log(dat)))/Delta + 0.5*a.hat"
"0","mer <- setModel(drift=""mu*x"",diffusion=""sigma*x"",jump.coeff=""1"", measure=list(intensity=""lambda"", df=list(""dnorm(z, beta, dels )"")),measure.type=""CP"", solve.variable=""x"")"
"0","yuimaMer <- setYuima(model=mer, data=ret@data)"
"0",""
"0","lower<-list(mu=0.00001, sigma=0.01, lambda=0.001, beta=0.0001, dels =0.1)"
"0","upper<-list(mu=1, sigma=100,lambda=25, beta=50, dels =50)"
"0","start<-list(mu=b.hat, sigma=a.hat, lambda=5, beta=1, dels =2)"
"0","outMer <- qmle (yuimaMer, start=start, upper=upper, lower=lower, threshold = 2.5, method=""L-BFGS-B"")"
"0","summary(outMer)"
"1","Quasi-Maximum likelihood estimation

Call:
"
"1","qmle(yuima = yuimaMer, start = start, method = ""L-BFGS-B"", lower = lower, 
"
"1","    upper = upper, threshold = 2.5)
"
"1","
Coefficients:
"
"1","      "
"1","     Estimate"
"1"," Std. Error"
"1","
sigma "
"1"," 0.4076784024"
"1","        NaN"
"1","
mu    "
"1"," 0.0003179164"
"1"," 0.02659401"
"1","
lambda"
"1"," 0.3100683566"
"1"," 0.02243553"
"1","
beta  "
"1"," 0.6007464387"
"1"," 0.42706429"
"1","
dels  "
"1"," 5.9021460168"
"1"," 0.30198062"
"1","
"
"1","
-2 log L:"
"1"," "
"1","4588.749"
"1"," "
"1","
"
"1","

Number of estimated jumps: 192
"
"1","
Average inter-arrival times: 3.225131
"
"1","
Average jump size: 0.600721
"
"1","
Standard Dev. of jump size: 5.917650
"
"1","
Jump Threshold: 2.500000
"
"1","
Summary statistics for jump times:
"
"1","   Min. "
"1","1st Qu. "
"1"," Median "
"1","   Mean "
"1","3rd Qu. "
"1","   Max. "
"1","
"
"1","  18285 "
"1","  18412 "
"1","  18555 "
"1","  18570 "
"1","  18717 "
"1","  18901 "
"1","
"
"1","
Summary statistics for jump size:
"
"1","    Min. "
"1"," 1st Qu. "
"1","  Median "
"1","    Mean "
"1"," 3rd Qu. "
"1","    Max. "
"1","
"
"1","-22.4075 "
"1"," -4.0607 "
"1","  2.9462 "
"1","  0.6007 "
"1","  4.5926 "
"1"," 18.9234 "
"1","
"
"1","
"
"0","resultCev <- outMer@coef"
"0","MertonParam <- t(outMer@coef)"
"0","MertonParam"
"1","    "
"1","     sigma"
"1","           mu"
"1","    lambda"
"1","      beta"
"1","     dels"
"1","
[1,]"
"1"," 0.4076784"
"1"," 0.0003179164"
"1"," 0.3100684"
"1"," 0.6007464"
"1"," 5.902146"
"1","
"
"0","sigma <- as.numeric(MertonParam[1])"
"0","mu <- as.numeric(MertonParam[2])"
"0","lambda <- as.numeric(MertonParam[3])"
"0","beta <- as.numeric(MertonParam[4])"
"0","dels <- as.numeric(MertonParam[5])"
"0",""
"0","###### Merton - Simulation ######"
"0","#Simulation of 1 path"
"0","nsim <- 10"
"0","N <- 100"
"0","Time <- 1"
"0","S0 <- 1 #(?)"
"0",""
"0","Merton_paths<-matrix(nrow = nsim, ncol=N+1)"
"0","samp<-setSampling (n=N, Terminal=Time)"
"0",""
"0","for (i in 1:nsim){"
"0","  MSFTsimulationMerton <-simulate(mer, xinit=S0 , sampling=samp, true.par = list(mu=MertonParam[2], sigma=MertonParam[1], lambda=MertonParam[3], beta=MertonParam[4], dels=MertonParam[5]))"
"0","  Merton_paths[i,] <- MSFTsimulationMerton@data@original.data "
"0","}"
"0","colori=viridis(20)"
"0","plot(Merton_paths[1,], col=0, type=""l"", ylim = c(min(Merton_paths[1,]),max(Merton_paths[1,])), #plot the Monte Carlo Simulation"
"0","     main = ""MC Simlation for Merton"", sub = ""100 steps, 1 paths"", "
"0","     xlab = ""Time"", ylab = ""Merton Process"")"
