"0",""
"0","#n path"
"0","Merton_paths<-matrix(nrow = nsim, ncol=N+1)"
"0","samp<-setSampling (n=N, Terminal=Time)"
"0","samp"
"1","Formal class"
"1",""
"1"," '"
"1",""
"1","yuima.sampling"
"1",""
"1","' [package """
"1",""
"1","yuima"
"1",""
"1","""] with "
"1",""
"1","11 slots"
"1",""
"1","
"
"1","  .."
"1",""
"1","@ "
"1",""
"1","Initial      "
"1",""
"1",":"
"1"," num "
"1",""
"1","0"
"1",""
"1","
"
"1","  .."
"1",""
"1","@ "
"1",""
"1","Terminal     "
"1",""
"1",":"
"1"," num "
"1",""
"1","1"
"1",""
"1","
"
"1","  .."
"1",""
"1","@ "
"1",""
"1","n            "
"1",""
"1",":"
"1"," int "
"1",""
"1","100"
"1",""
"1","
"
"1","  .."
"1",""
"1","@ "
"1",""
"1","delta        "
"1",""
"1",":"
"1"," num "
"1",""
"1","0.01"
"1",""
"1","
"
"1","  .."
"1",""
"1","@ "
"1",""
"1","grid         "
"1",""
"1",":"
"1","List"
"1",""
"1"," of "
"1",""
"1","1"
"1",""
"1","
"
"1","  .. .."
"1",""
"1","$ "
"1",""
"1",""
"1",""
"1",":"
"1"," num [1:101] "
"1",""
"1","0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09"
"1",""
"1"," ..."
"1",""
"1","
"
"1","  .."
"1",""
"1","@ "
"1",""
"1","random       "
"1",""
"1",":"
"1"," logi "
"1",""
"1","FALSE"
"1",""
"1","
"
"1","  .."
"1",""
"1","@ "
"1",""
"1","regular      "
"1",""
"1",":"
"1"," logi "
"1",""
"1","TRUE"
"1",""
"1","
"
"1","  .."
"1",""
"1","@ "
"1",""
"1","sdelta       "
"1",""
"1",":"
"1"," num(0) "
"1",""
"1",""
"1",""
"1","
"
"1","  .."
"1",""
"1","@ "
"1",""
"1","sgrid        "
"1",""
"1",":"
"1"," num(0) "
"1",""
"1",""
"1",""
"1","
"
"1","  .."
"1",""
"1","@ "
"1",""
"1","oindex       "
"1",""
"1",":"
"1"," num(0) "
"1",""
"1",""
"1",""
"1","
"
"1","  .."
"1",""
"1","@ "
"1",""
"1","interpolation"
"1",""
"1",":"
"1"," chr "
"1",""
"1","""pt"""
"1",""
"1","
"
"0","for (i in 1:nsim){"
"0","  MSFTsimulationMerton <-simulate(mer, xinit=S0 , sampling=samp, true.par = list(mu=MertonParam[2], sigma=MertonParam[1], lambda=MertonParam[3], beta=MertonParam[4], dels=MertonParam[5]))"
"0","  Merton_paths[i,] <- MSFTsimulationMerton@data@original.data "
"0","}"
"0",""
"0","colori=viridis(nsim)"
"0","plot(Merton_paths[1,], col=0, type=""l"", ylim = c(min(Merton_paths),max(Merton_paths)), "
"0","     main = ""Monte Carlo Simulation for Mertor returns"", sub = ""10 steps, 10 paths"", "
"0","     xlab = ""Time"", ylab = ""MXNR returns"")"
